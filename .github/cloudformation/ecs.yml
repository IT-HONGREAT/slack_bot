Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VpcGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [ 1, !GetAZs '' ]

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Type: application
      IpAddressType: ipv4
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  WebSocketTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: websocket-target-group
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref Vpc

  FastAPITargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: fastapi-target-group
      Port: 8000
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref Vpc

  WebSocketService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECS_CLUSTER
      DesiredCount: 1
      TaskDefinition: !Ref WebSocketTaskDefinition
      LoadBalancers:
        - ContainerName: websocket
          ContainerPort: 80
          TargetGroupArn: !Ref WebSocketTargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !Ref PublicSubnet1
            - !Ref PublicSubnet2
          SecurityGroups:
            - !Ref SecurityGroup

  FastAPIService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECS_CLUSTER
      DesiredCount: 1
      TaskDefinition: !Ref FastAPITaskDefinition
      LoadBalancers:
        - ContainerName: fastapi
          ContainerPort: 8000
          TargetGroupArn: !Ref FastAPITargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !Ref PublicSubnet1
            - !Ref PublicSubnet2
          SecurityGroups:
            - !Ref SecurityGroup

  WebSocketTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: websocket-task-definition
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
        - ContainerDefinitions
      Memory: 512
      Cpu: 256
      ExecutionRoleArn: !Ref ECS_TASK_EXECUTION_ROLE
      ContainerDefinitions:
        - Name: websocket
          Image: <websocket_image>
          Essential: true
          PortMappings:
            - ContainerPort: 80

  FastAPITaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: fastapi-task-definition
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: fastapi
          Image: slackbot-fastapi
          Essential: true
          PortMappings:
            - ContainerPort: 8000

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access to the ECS containers
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: 0.0.0.0/0

  ECS_CLUSTER:
    Type: AWS::ECS::Cluster

  ECS_TASK_EXECUTION_ROLE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: ecs-task-execution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:log-group:/aws/ecs/*
