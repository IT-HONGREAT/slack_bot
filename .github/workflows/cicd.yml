name: CI/CD

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  AWS_LIGHTSAIL_SLACKBOT: slackbot
  AWS_LIGHTSAIL_FASTAPI: slackbot-fastapi

jobs:
  build_and_deploy:
    name: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

#      - name: Slackbot Secrets
#        run: |
#          echo "NOTION=$NOTION" >>/slackbot/.env
#          echo "SLACK_APP_TOKEN=$SLACK_APP_TOKEN" >>/slackbot/.env
#          echo "SLACK_BOT_TOKEN=$SLACK_BOT_TOKEN" >>/slackbot/.env
#          echo "SLACK_SIGNING_SECRET=$SLACK_SIGNING_SECRET" >>/slackbot/.env
#          echo "NOTION_reservation=$NOTION_reservation" >>/slackbot/.env
#          echo "NOTION_lunch=$NOTION_lunch" >>/slackbot/.env
#
#        env:
#          NOTION: ${{secrets.NOTION}}
#          SLACK_APP_TOKEN: ${{secrets.SLACK_APP_TOKEN}}
#          SLACK_BOT_TOKEN: ${{secrets.SLACK_BOT_TOKEN}}
#          SLACK_SIGNING_SECRET: ${{secrets.SLACK_SIGNING_SECRET}}
#          NOTION_reservation: ${{secrets.NOTION_reservation}}
#          NOTION_lunch: ${{secrets.NOTION_lunch}}
      - name: dir check
        run: |
          pwd
          ls
          


      - name: Install AWS Lightsail # AWS SDK on ubuntu (for cli of LightSail)
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install || true
          aws --version
          curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "lightsailctl"
          sudo mv "lightsailctl" "/usr/local/bin/lightsailctl"
          sudo chmod +x /usr/local/bin/lightsailctl

      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker Build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./slackbot.Dockerfile
          tags: ${{ env.AWS_LIGHTSAIL_SLACKBOT }}:latest
          platforms: linux/amd64
          push: false

      - name: Push and Deploy
        run: |
          service_name=${{ env.AWS_LIGHTSAIL_SLACKBOT }}
          aws lightsail push-container-image \
            --region ${{ env.AWS_REGION }} \
            --service-name ${service_name} \
            --label ${service_name} \
            --image ${service_name}:latest
          aws lightsail get-container-images --service-name ${service_name} | jq --raw-output ".containerImages[0].image" > image.txt
          jq --arg image $(cat image.txt) '.containers.slackbot.image = $image' container.template.json > container.json
          aws lightsail create-container-service-deployment --service-name ${service_name} --cli-input-json file://$(pwd)/container.json