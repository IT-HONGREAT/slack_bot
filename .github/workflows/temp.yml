#name: Build and deploy Docker app to Lightsail
#
#on:
#  push:
#    branches:
#      - main # 배포 트리거 대상 브랜치 on.push.branch -> 해당 브랜치가 푸시될 때 트리깅
#
#env:
#  AWS_REGION: ap-northeast-2
#  AWS_LIGHTSAIL_SERVICE_NAME: amazon-lightsail-container-example # 실제 lightsail에 올라갈 이미지 명
#
#jobs:
#  deploy:
#    name: Build and deploy
#    runs-on: ubuntu-latest
#    defaults:
#      run:
#        working-directory: ligthsail-example # github project내에 배포할 대상 프로젝트 디렉토리
#    steps:
#      - name: Checkout # 해당 working-directory checkout (트리깅 브랜치 최신버전)
#        uses: actions/checkout@v2
#
#      - name: Install Utilities # 필수 유틸리티 다운로드
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y jq unzip
#
#      - name: Install AWS Client # AWS SDK 다운로드 (LightSail 이미지 푸시 및 배포를 위함)
#        run: |
#          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
#          unzip awscliv2.zip
#          sudo ./aws/install || true
#          aws --version
#          curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "lightsailctl"
#          sudo mv "lightsailctl" "/usr/local/bin/lightsailctl"
#          sudo chmod +x /usr/local/bin/lightsailctl
#
#      - name: Configure AWS credentials # 입력된 IAM 사용자 액세스키 & 시크릿키 검증
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-region: ${{ env.AWS_REGION }}
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#
#      - name: Build Docker Image # Docker Buildkit 빌드
#        run: DOCKER_BUILDKIT=1 docker build -t ${{ env.AWS_LIGHTSAIL_SERVICE_NAME }}:release .
#
#      - name: Push and Deploy # 이미지 푸시 및 배포
#        run: |
#          service_name=${{ env.AWS_LIGHTSAIL_SERVICE_NAME }}
#          aws lightsail push-container-image \
#            --region ${{ env.AWS_REGION }} \
#            --service-name ${service_name} \
#            --label ${service_name} \
#            --image ${service_name}:release
#          aws lightsail get-container-images --service-name ${service_name} | jq --raw-output ".containerImages[0].image" > image.txt
#          jq --arg image $(cat image.txt) '.containers.app.image = $image' container.template.json > container.json
#          aws lightsail create-container-service-deployment --service-name ${service_name} --cli-input-json file://$(pwd)/container.json